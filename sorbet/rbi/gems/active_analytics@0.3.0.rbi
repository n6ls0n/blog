# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `active_analytics` gem.
# Please instead update this file by running `bin/tapioca gem active_analytics`.


# source://active_analytics//lib/active_analytics/version.rb#1
module ActiveAnalytics
  class << self
    # source://active_analytics//lib/active_analytics.rb#52
    def flush_queue; end

    # source://active_analytics//lib/active_analytics.rb#44
    def queue_request(request); end

    # source://railties/8.0.0/lib/rails/engine.rb#413
    def railtie_helpers_paths; end

    # source://railties/8.0.0/lib/rails/engine.rb#396
    def railtie_namespace; end

    # source://railties/8.0.0/lib/rails/engine.rb#417
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # source://active_analytics//lib/active_analytics.rb#21
    def record_request(request); end

    # source://active_analytics//lib/active_analytics.rb#17
    def redis; end

    # source://active_analytics//lib/active_analytics.rb#13
    def redis=(connection); end

    # source://active_analytics//lib/active_analytics.rb#9
    def redis_url; end

    # source://active_analytics//lib/active_analytics.rb#5
    def redis_url=(string); end

    # source://railties/8.0.0/lib/rails/engine.rb#402
    def table_name_prefix; end

    # source://railties/8.0.0/lib/rails/engine.rb#409
    def use_relative_model_naming?; end
  end
end

class ActiveAnalytics::ApplicationController < ::ActionController::Base
  private

  # source://actionview/8.0.0/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end
  def current_views_per_days; end
  def from_date; end
  def previous_from_date; end
  def previous_to_date; end
  def previous_views_per_days; end
  def require_date_range; end
  def to_date; end

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def middleware_stack; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def middleware_stack=(new_value); end
  end
end

module ActiveAnalytics::ApplicationController::HelperMethods
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::Importmap::ImportmapTagsHelper
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
  include ::ActionController::Base::HelperMethods
  include ::ActiveAnalytics::ApplicationHelper
end

module ActiveAnalytics::ApplicationHelper
  def format_view_count(number); end
end

class ActiveAnalytics::ApplicationJob < ::ActiveJob::Base; end

class ActiveAnalytics::ApplicationMailer < ::ActionMailer::Base
  private

  # source://actionview/8.0.0/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def _layout; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def _layout=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def _layout_conditions; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def _layout_conditions=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def default_params; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def default_params=(new_value); end
  end
end

class ActiveAnalytics::ApplicationRecord < ::ActiveRecord::Base
  include ::ActiveAnalytics::ApplicationRecord::GeneratedAttributeMethods
  include ::ActiveAnalytics::ApplicationRecord::GeneratedAssociationMethods

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def _validators; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def _validators=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def defined_enums; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def defined_enums=(new_value); end
  end
end

module ActiveAnalytics::ApplicationRecord::GeneratedAssociationMethods; end
module ActiveAnalytics::ApplicationRecord::GeneratedAttributeMethods; end

class ActiveAnalytics::AssetsController < ::ActiveAnalytics::ApplicationController
  def show; end

  private

  # source://actionview/8.0.0/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end
  def endpoints; end
  def mime_type; end

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def __callbacks; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def __callbacks=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def middleware_stack; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def middleware_stack=(new_value); end
  end
end

# source://active_analytics//lib/active_analytics/engine.rb#2
class ActiveAnalytics::Engine < ::Rails::Engine
  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def __callbacks; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def __callbacks=(new_value); end
  end
end

# source://active_analytics//lib/active_analytics.rb#42
ActiveAnalytics::OLD_QUEUE = T.let(T.unsafe(nil), String)

class ActiveAnalytics::PagesController < ::ActiveAnalytics::ApplicationController
  include ::ActiveAnalytics::PagesHelper

  def index; end
  def show; end

  private

  # source://actionview/8.0.0/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def __callbacks; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def __callbacks=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def middleware_stack; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def middleware_stack=(new_value); end
  end
end

module ActiveAnalytics::PagesController::HelperMethods
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::Importmap::ImportmapTagsHelper
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
  include ::ActionController::Base::HelperMethods
  include ::ActiveAnalytics::ApplicationHelper
  include ::ActiveAnalytics::ApplicationController::HelperMethods
  include ::ActiveAnalytics::PagesHelper
end

module ActiveAnalytics::PagesHelper
  def page_from_params; end
  def page_to_params(name); end
end

# source://active_analytics//lib/active_analytics.rb#41
ActiveAnalytics::QUEUE = T.let(T.unsafe(nil), String)

class ActiveAnalytics::ReferrersController < ::ActiveAnalytics::ApplicationController
  def index; end
  def show; end

  private

  # source://actionview/8.0.0/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def __callbacks; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def __callbacks=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def middleware_stack; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def middleware_stack=(new_value); end
  end
end

module ActiveAnalytics::ReferrersController::HelperMethods
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::Importmap::ImportmapTagsHelper
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
  include ::ActionController::Base::HelperMethods
  include ::ActiveAnalytics::ApplicationHelper
  include ::ActiveAnalytics::ApplicationController::HelperMethods
  include ::ActiveAnalytics::ReferrersHelper
end

module ActiveAnalytics::ReferrersHelper; end

# source://active_analytics//lib/active_analytics.rb#40
ActiveAnalytics::SEPARATOR = T.let(T.unsafe(nil), String)

class ActiveAnalytics::SitesController < ::ActiveAnalytics::ApplicationController
  def index; end
  def show; end

  private

  # source://actionview/8.0.0/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def __callbacks; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def __callbacks=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def middleware_stack; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def middleware_stack=(new_value); end
  end
end

module ActiveAnalytics::SitesController::HelperMethods
  include ::ActionText::ContentHelper
  include ::ActionText::TagHelper
  include ::Importmap::ImportmapTagsHelper
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
  include ::ActionController::Base::HelperMethods
  include ::ActiveAnalytics::ApplicationHelper
  include ::ActiveAnalytics::ApplicationController::HelperMethods
  include ::ActiveAnalytics::SitesHelper
end

module ActiveAnalytics::SitesHelper
  def site_icon(host); end
end

# source://active_analytics//lib/active_analytics/version.rb#2
ActiveAnalytics::VERSION = T.let(T.unsafe(nil), String)

class ActiveAnalytics::ViewsPerDay < ::ActiveAnalytics::ApplicationRecord
  include ::ActiveAnalytics::ViewsPerDay::GeneratedAttributeMethods
  include ::ActiveAnalytics::ViewsPerDay::GeneratedAssociationMethods

  class << self
    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def __callbacks; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def __callbacks=(new_value); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def _validators; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def _validators=(new_value); end

    # source://activerecord/8.0.0/lib/active_record/scoping/named.rb#174
    def after(*args, **_arg1); end

    def append(params); end

    # source://activerecord/8.0.0/lib/active_record/scoping/named.rb#174
    def between_dates(*args, **_arg1); end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#12
    def defined_enums; end

    # source://activesupport/8.0.0/lib/active_support/class_attribute.rb#15
    def defined_enums=(new_value); end

    def group_by_date; end
    def group_by_page; end
    def group_by_referrer_page; end
    def group_by_referrer_site; end
    def group_by_site; end

    # source://activerecord/8.0.0/lib/active_record/scoping/named.rb#174
    def order_by_date(*args, **_arg1); end

    # source://activerecord/8.0.0/lib/active_record/scoping/named.rb#174
    def order_by_totals(*args, **_arg1); end

    def split_referrer(referrer); end
    def to_histogram; end

    # source://activerecord/8.0.0/lib/active_record/scoping/named.rb#174
    def top(*args, **_arg1); end
  end
end

class ActiveAnalytics::ViewsPerDay::Day
  def initialize(day, total); end

  def day; end
  def total; end
end

module ActiveAnalytics::ViewsPerDay::GeneratedAssociationMethods; end
module ActiveAnalytics::ViewsPerDay::GeneratedAttributeMethods; end

class ActiveAnalytics::ViewsPerDay::Histogram
  def initialize(scope, from_date, to_date); end

  def bars; end
  def fill_missing_days(bars, from, to); end
  def from_date; end
  def max_value; end
  def to_date; end
  def total; end
end

class ActiveAnalytics::ViewsPerDay::Histogram::Bar
  def initialize(label, value, histogram); end

  def height; end
  def histogram; end
  def label; end
  def value; end
end

class ActiveAnalytics::ViewsPerDay::Page
  def initialize(host, path, total); end

  def host; end
  def path; end
  def total; end
  def url; end
end

ActiveAnalytics::ViewsPerDay::SLASH = T.let(T.unsafe(nil), String)

class ActiveAnalytics::ViewsPerDay::Site
  def initialize(host, total); end

  def host; end
  def total; end
end
